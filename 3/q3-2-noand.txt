	// LSB[n1]
	movi 1,0x7fff
	// n2
	movi 2,0x0007

	// MSB[n1]
	addi 7,0,0

loop:	beq 2,0,end
	
	addi 5,0,1
	// check the first bit of R2
	nand 6,2,5
         nand 6,6,6

	// no add
	beq 6,0,noad
	
	// init mask
	movi 5,32768

	// si MSB1[R3]==0 -> second
	bl 5,3,second
	// => MSB1[R3]==1 && MSB1[R1]==0 -> morecheck
	bl 5,1,moreCheck
	// => MSB1[R3]==1 && MSB1[R1]==1 -> carry
	beq 0,0,carry
	
	// => MSB1[R3]==0 && MSB1[R1]==0 -> endcarry
second:	bl 5,1,endcarry
	// => MSB1[R3]==0 && MSB1[R1]==1 -> morecheck

	// MSB1[R1] || MSB1[R3] == 1
moreCheck:	movi 5,32767
	
	// R6 <- LSB15[R3]
	nand 6,3,5
	nand 6,6,6
	// R5 <- LSB15[R1]
	nand 5,1,5
	nand 5,5,5
	
	// R6 <- LSB15[R1] + LSB15[R3]
	add 6,6,5
	
	// if MSB(LSB15[R3] + LSB15[R5])==0 => pas de carry
	movi 5,32768
	
	// R1 <- MSB(LSB15[R3] + LSB15[R5])
	nand 5,6,5
	nand 5,5,5
	
	beq 5,0,endcarry
	// R4 <- R4 + 1
carry:	addi 4,4,1
	// R3 <- R3 + R5
endcarry:	add 3,3,1
	add 4,4,7
	
	// R7 R4 << 1
noad:	shifti 7,7,1
	
	movi 5,32768
	
	nand 6,1,5
	nand 6,6,6

	beq 6,0,nolshcarry
	addi 7,7,1
nolshcarry:	shifti 1,1,1

	// R2 >> 1 (right shift)
	shifti 2,2,-1

	movi 6,32767

	nand 2,2,6
	nand 2,2,2

	beq 0,0,loop

end:	halt